//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azure

// ChatRole - A description of the intended purpose of a message within a chat completions interaction.
type ChatRole string

const (
	// ChatRoleAssistant - The role that provides responses to system-instructed, user-prompted input.
	ChatRoleAssistant ChatRole = "assistant"
	// ChatRoleSystem - The role that instructs or sets the behavior of the assistant.
	ChatRoleSystem ChatRole = "system"
	// ChatRoleUser - The role that provides input for chat completions.
	ChatRoleUser ChatRole = "user"
)

// PossibleChatRoleValues returns the possible values for the ChatRole const type.
func PossibleChatRoleValues() []ChatRole {
	return []ChatRole{
		ChatRoleAssistant,
		ChatRoleSystem,
		ChatRoleUser,
	}
}

// ImageSize - The desired size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
type ImageSize string

const (
	// ImageSizeSize1024X1024 - Image size of 1024x1024.
	ImageSizeSize1024X1024 ImageSize = "1024x1024"
	// ImageSizeSize256X256 - Image size of 256x256.
	ImageSizeSize256X256 ImageSize = "256x256"
	// ImageSizeSize512X512 - Image size of 512x512.
	ImageSizeSize512X512 ImageSize = "512x512"
)

// PossibleImageSizeValues returns the possible values for the ImageSize const type.
func PossibleImageSizeValues() []ImageSize {
	return []ImageSize{
		ImageSizeSize1024X1024,
		ImageSizeSize256X256,
		ImageSizeSize512X512,
	}
}

// State - The state of a job or item.
type State string

const (
	// StateCanceled - The operation has been canceled and is incomplete.
	StateCanceled State = "canceled"
	// StateDeleted - The entity has been deleted but may still be referenced by other entities predating the deletion.
	StateDeleted State = "deleted"
	// StateFailed - The operation has completed processing with a failure and cannot be further consumed.
	StateFailed State = "failed"
	// StateNotRunning - The operation was created and is queued to be processed in the future.
	StateNotRunning State = "notRunning"
	// StateRunning - The operation has started to be processed.
	StateRunning State = "running"
	// StateSucceeded - The operation has successfully be processed and is ready for consumption.
	StateSucceeded State = "succeeded"
)

// PossibleStateValues returns the possible values for the State const type.
func PossibleStateValues() []State {
	return []State{
		StateCanceled,
		StateDeleted,
		StateFailed,
		StateNotRunning,
		StateRunning,
		StateSucceeded,
	}
}
